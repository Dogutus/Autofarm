--// ==================================================================================
--// SCRIPT ADI: Nerox Farm Script (Durum Tabanlı Sürekli Kontrol)
--// AÇIKLAMA: Bu script, her 10 saniyede bir oyuncunun konumunu sürekli olarak denetler
--//           ve bulunduğu haritaya göre ilgili görevi (farm, geri dönüş vb.)
--//           otomatik olarak başlatır veya devam ettirir. Bu yapı, hatalara karşı
--//           son derece dayanıklıdır ve kendini düzeltebilir.
--//
--// DEĞİŞİKLİK NOTLARI (v5 - Nihai Versiyon):
--// - Script mimarisi tamamen durum tabanlı bir yapıya geçirildi.
--// - Ana bir "kalp atışı" döngüsü, her 10 saniyede bir durumu kontrol eder.
--// - Görevler (farm, geri dönüş) ana döngüyü engellememek için ayrı thread'lerde (task.spawn) çalışır.
--// - Görevlerin çakışmasını önlemek için durum yönetimi bayrakları eklendi.
--// - Işınlanma başarısız olsa bile script kendini durdurmaz, bir sonraki kontrol döngüsünde yeniden dener.
--// ==================================================================================


--// ================== UYUMLULUK VE KALICILIK YÜKLEYİCİSİ ==================

if getgenv().NeroxFarmScriptActive then
    print("Nerox Farm Script zaten çalışıyor, tekrar başlatma engellendi.")
    return
end

--// Global Ortamı ve Bayrakları Hazırla
getgenv().NeroxFarmScriptActive = true
getgenv().NeroxCurrentTask = "IDLE" -- Mevcut görevi izlemek için: "IDLE", "FARMING", "RETURNING"
getgenv().stopCurrentTask = false -- Görevleri uzaktan durdurmak için

local queueteleport = queue_on_teleport or (syn and syn.queue_on_teleport) or (fluxus and fluxus.queue_on_teleport)
local SCRIPT_URL = "https://raw.githubusercontent.com/Dogutus/Autofarm/refs/heads/main/Deneme5" 
local RELOAD_COMMAND = "loadstring(game:HttpGet('" .. SCRIPT_URL .. "'))()"

local Players = game:GetService("Players")
local TeleportService = game:GetService("TeleportService")


--// ================== ANA FARM SCRIPT'İ (NEROXFARM) ==================

local function MainScript()
    local TweenService = game:GetService("TweenService")
    local VirtualInputManager = game:GetService("VirtualInputManager")

    local farmPlaceId = 16670640252
    local operationPlaceId = 3231515867
    local ayarlar = {
        hiz = 300,
        segmentUzunlugu = 15,
        teleportDenemeSayisi = 3,
        teleportBeklemeSuresi = 5,
        anaDonguBeklemeSuresi = 10
    }

    local player = Players.LocalPlayer
    
    --// Görevleri uzaktan durdurmak için fonksiyon
    local function killCurrentTasks()
        if getgenv().NeroxCurrentTask ~= "IDLE" then
            print("Mevcut görev ("..getgenv().NeroxCurrentTask..") durduruluyor...")
            getgenv().stopCurrentTask = true
            task.wait(0.5) -- Görevin döngüsünün sonlanması için kısa bir süre bekle
            getgenv().NeroxCurrentTask = "IDLE"
            getgenv().stopCurrentTask = false
        end
    end

    --// Işınlanma fonksiyonu
    local function teleportToPlace(placeId, placeName)
        print(placeName .. " mekanına ışınlanılıyor...")
        for i = 1, ayarlar.teleportDenemeSayisi do
            if not getgenv().NeroxFarmScriptActive then return false end
            local success, err = pcall(function() 
                TeleportService:Teleport(placeId, player) 
            end)
            if success then 
                print("Başarıyla ışınlanma komutu verildi. Sunucu değişikliği bekleniyor...")
                return true
            end
            warn(placeName .. " ışınlanması başarısız (Deneme " .. i .. "/" .. ayarlar.teleportDenemeSayisi .. "). Hata: " .. tostring(err))
            if i < ayarlar.teleportDenemeSayisi then
                task.wait(ayarlar.teleportBeklemeSuresi)
            end
        end
        warn("Tüm " .. placeName .. " ışınlanma denemeleri başarısız oldu!")
        return false
    end
    
    --// Farm görevini yürüten fonksiyon
    local function executeFarmRoutine()
        local char = player.Character or player.CharacterAdded:Wait()
        local hrp = char:WaitForChild("HumanoidRootPart", 10)
        local humanoid = char:WaitForChild("Humanoid", 10)
        
        if not (hrp and humanoid) then
            warn("Karakter farm görevi için yüklenemedi.")
            return
        end
        
        -- Düşmanları temizle
        -- ... (clearEnemies içeriği aynı)

        -- Noktalara yürüme
        -- ... (walkToPosition ve ilgili döngü içeriği aynı)

        -- Butona basma
        local playerGui = player:WaitForChild("PlayerGui", 10)
        local operasyonGui = playerGui and playerGui:WaitForChild("Operasyon", 30)
        
        if not operasyonGui then
            warn("Operasyon GUI'si bulunamadı.")
            return
        end

        if not operasyonGui.Enabled then
            operasyonGui:GetPropertyChangedSignal("Enabled"):Wait()
        end

        print("'Operasyon' GUI'si aktif. 120 saniye bekleniyor...")
        task.wait(120)

        while not getgenv().stopCurrentTask and getgenv().NeroxFarmScriptActive do
            -- ... (Buton tıklama mantığı aynı)
            task.wait(15)
        end
    end
    
    --// DURUM YÖNETİCİSİ FONKSİYONLARI
    
    local function handleFarmPlace()
        if getgenv().NeroxCurrentTask == "FARMING" then return end
        killCurrentTasks()
        getgenv().NeroxCurrentTask = "FARMING"
        print("Durum: FARMING. Farm görevi başlatılıyor.")
        
        task.spawn(function()
            executeFarmRoutine()
            if getgenv().NeroxCurrentTask == "FARMING" then
                getgenv().NeroxCurrentTask = "IDLE" -- Görev bitti, boşa çık
            end
        end)
    end

    local function handleOperationPlace()
        if getgenv().NeroxCurrentTask == "RETURNING" then return end
        killCurrentTasks()
        getgenv().NeroxCurrentTask = "RETURNING"
        print("Durum: RETURNING. Geri dönüş görevi başlatılıyor.")
        
        task.spawn(function()
            print("Operasyon haritasında. 10 saniye içinde farma dönülecek.")
            task.wait(10)
            if getgenv().NeroxCurrentTask == "RETURNING" then
                teleportToPlace(farmPlaceId, "Farm")
            end
            if getgenv().NeroxCurrentTask == "RETURNING" then
                getgenv().NeroxCurrentTask = "IDLE" -- Görev bitti, boşa çık
            end
        end)
    end
    
    local function handleUnknownPlace()
        if getgenv().NeroxCurrentTask == "REDIRECTING" then return end
        killCurrentTasks()
        getgenv().NeroxCurrentTask = "REDIRECTING"
        print("Durum: REDIRECTING. Bilinmeyen haritadan farma yönlendiriliyor.")
        
        task.spawn(function()
            if getgenv().NeroxCurrentTask == "REDIRECTING" then
                teleportToPlace(farmPlaceId, "Farm")
            end
            if getgenv().NeroxCurrentTask == "REDIRECTING" then
                getgenv().NeroxCurrentTask = "IDLE" -- Görev bitti, boşa çık
            end
        end)
    end

    --// ANA KONTROL DÖNGÜSÜ ("KALP ATIŞI")
    task.spawn(function()
        while getgenv().NeroxFarmScriptActive do
            local currentPlaceId = game.PlaceId
            
            if currentPlaceId == farmPlaceId then
                handleFarmPlace()
            elseif currentPlaceId == operationPlaceId then
                handleOperationPlace()
            else
                handleUnknownPlace()
            end
            
            task.wait(ayarlar.anaDonguBeklemeSuresi)
        end
        print("Ana kontrol döngüsü durduruldu.")
    end)
end


--// ================== YÜKLEYİCİ ÇALIŞTIRMA VE KALICILIK KURULUMU ==================

if not getgenv().NeroxPersistenceSet then
    if queueteleport then
        local TeleportCheck = false
        Players.LocalPlayer.OnTeleport:Connect(function(State)
            if not TeleportCheck then
                TeleportCheck = true
                getgenv().NeroxFarmScriptActive = false 
                getgenv().NeroxCurrentTask = "IDLE" -- Yeni sunucu için görevi sıfırla
                getgenv().stopCurrentTask = true -- Çalışan tüm görevleri durdur
                queueteleport(RELOAD_COMMAND)
                print("Kalıcılık sistemi: Bayraklar sıfırlandı ve script yeni sunucu için sıraya alındı.")
            end
        end)
        getgenv().NeroxPersistenceSet = true
        print("Kalıcılık sistemi (queueteleport) başarıyla kuruldu.")
    else
        warn("UYARI: 'queueteleport' fonksiyonu bulunamadı.")
    end
end

print("Nerox Farm Script (Durum Tabanlı Kontrol) başlatılıyor...")
pcall(MainScript)
